<?php
 class acf_pro_options_page { var $page; function __construct() { add_action('admin_menu', array($this,'admin_menu'), 99, 0); add_filter( 'acf/location/rule_types', array($this, 'rule_types'), 10, 1 ); add_filter( 'acf/location/rule_values/options_page', array($this, 'rule_values'), 10, 1 ); add_filter( 'acf/location/rule_match/options_page', array($this, 'rule_match'), 10, 3 ); } function rule_types( $choices ) { $choices[ __("Forms",'acf') ]['options_page'] = __("Options Page",'acf'); return $choices; } function rule_values( $choices ) { $pages = acf_get_options_pages(); if( !empty($pages) ) { foreach( $pages as $page ) { $choices[ $page['menu_slug'] ] = $page['menu_title']; } } else { $choices[''] = __('No options pages exist', 'acf'); } return $choices; } function rule_match( $match, $rule, $options ) { $options_page = false; if( isset($options['options_page']) ) { $options_page = $options['options_page']; } if( !$options_page ) { global $plugin_page; $options_page = $plugin_page; } if( $rule['operator'] == "==" ) { $match = ( $options_page === $rule['value'] ); } elseif( $rule['operator'] == "!=" ) { $match = ( $options_page !== $rule['value'] ); } return $match; } function admin_menu() { $pages = acf_get_options_pages(); if( !empty($pages) ) { foreach( $pages as $page ) { $slug = ''; if( empty($page['parent_slug']) ) { $slug = add_menu_page( $page['page_title'], $page['menu_title'], $page['capability'], $page['menu_slug'], array($this, 'html'), $page['icon_url'], $page['position'] ); } else { $slug = add_submenu_page( $page['parent_slug'], $page['page_title'], $page['menu_title'], $page['capability'], $page['menu_slug'], array($this, 'html') ); } add_action("load-{$slug}", array($this,'admin_load')); } } } function admin_load() { global $plugin_page; $this->page = acf_get_options_page($plugin_page); if( acf_verify_nonce('options') ) { if( acf_validate_save_post(true) ) { $post_id = acf_get_valid_post_id($this->page['post_id']); acf_update_setting('autoload', $this->page['autoload']); acf_save_post( $post_id ); wp_redirect( admin_url("admin.php?page={$plugin_page}&message=1") ); exit; } } add_action('admin_enqueue_scripts', array($this,'admin_enqueue_scripts')); } function admin_enqueue_scripts() { acf_enqueue_scripts(); add_action( 'acf/input/admin_head', array($this,'admin_head') ); } function admin_head() { $field_groups = acf_get_field_groups(array( 'options_page' => $this->page['menu_slug'] )); if( !empty($_GET['message']) && $_GET['message'] == '1' ) { acf_add_admin_notice( __("Options Updated",'acf') ); } if( empty($field_groups) ) { acf_add_admin_notice(__("No Custom Field Groups found for this options page",'acf') . '. <a href="' . admin_url() . 'post-new.php?post_type=acf-field-group">' . __("Create a Custom Field Group",'acf') . '</a>', 'error'); } else { foreach( $field_groups as $i => $field_group ) { $id = "acf-{$field_group['key']}"; $title = $field_group['title']; $context = $field_group['position']; $priority = 'high'; $args = array( 'field_group' => $field_group ); if( $context == 'acf_after_title' ) { $context = 'normal'; } elseif( $context == 'side' ) { $priority = 'core'; } $priority = apply_filters('acf/input/meta_box_priority', $priority, $field_group); add_meta_box( $id, $title, array($this, 'render_meta_box'), 'acf_options_page', $context, $priority, $args ); } } } function render_meta_box( $post, $args ) { extract( $args ); extract( $args ); $o = array( 'id' => $id, 'key' => $field_group['key'], 'style' => $field_group['style'], 'edit_url' => '', 'edit_title' => __('Edit field group', 'acf'), 'visibility' => true ); $post_id = acf_get_valid_post_id($this->page['post_id']); $fields = acf_get_fields( $field_group ); if( $field_group['label_placement'] == 'left' ) { ?>
			<table class="acf-table">
				<tbody>
					<?php acf_render_fields( $post_id, $fields, 'tr', $field_group['instruction_placement'] ); ?>
				</tbody>
			</table>
			<?php
 } else { acf_render_fields( $post_id, $fields, 'div', $field_group['instruction_placement'] ); } if( $field_group['ID'] && acf_current_user_can_admin() ) { $o['edit_url'] = admin_url('post.php?post=' . $field_group['ID'] . '&action=edit'); } ?>
<script type="text/javascript">
if( typeof acf !== 'undefined' ) {
		
	acf.postbox.render(<?php echo json_encode($o); ?>);	

}
</script>
<?php
 } function html() { $view = array( 'page' => $this->page ); acf_pro_get_view('options-page', $view); } } new acf_pro_options_page(); ?>
