<?php
 if( ! class_exists('acf_field_wysiwyg') ) : class acf_field_wysiwyg extends acf_field { var $exists = 0; function __construct() { $this->name = 'wysiwyg'; $this->label = __("Wysiwyg Editor",'acf'); $this->category = 'content'; $this->defaults = array( 'tabs' => 'all', 'toolbar' => 'full', 'media_upload' => 1, 'default_value' => '', ); if( !empty($GLOBALS['wp_embed']) ) { add_filter( 'acf_the_content', array( $GLOBALS['wp_embed'], 'run_shortcode' ), 8 ); add_filter( 'acf_the_content', array( $GLOBALS['wp_embed'], 'autoembed' ), 8 ); } add_filter( 'acf_the_content', 'capital_P_dangit', 11 ); add_filter( 'acf_the_content', 'wptexturize' ); add_filter( 'acf_the_content', 'convert_smilies' ); add_filter( 'acf_the_content', 'convert_chars' ); add_filter( 'acf_the_content', 'wpautop' ); add_filter( 'acf_the_content', 'shortcode_unautop' ); add_filter( 'acf_the_content', 'do_shortcode', 11); add_action('acf/input/admin_footer_js', array($this, 'input_admin_footer_js')); parent::__construct(); } function get_toolbars() { global $wp_version; $toolbars = array(); $editor_id = 'acf_content'; if( version_compare($wp_version, '3.9', '>=' ) ) { $toolbars['Full'] = array( 1 => apply_filters('mce_buttons', array('bold', 'italic', 'strikethrough', 'bullist', 'numlist', 'blockquote', 'hr', 'alignleft', 'aligncenter', 'alignright', 'link', 'unlink', 'wp_more', 'spellchecker', 'fullscreen', 'wp_adv' ), $editor_id), 2 => apply_filters('mce_buttons_2', array( 'formatselect', 'underline', 'alignjustify', 'forecolor', 'pastetext', 'removeformat', 'charmap', 'outdent', 'indent', 'undo', 'redo', 'wp_help' ), $editor_id), 3 => apply_filters('mce_buttons_3', array(), $editor_id), 4 => apply_filters('mce_buttons_4', array(), $editor_id), ); $toolbars['Basic'] = array( 1 => apply_filters('teeny_mce_buttons', array('bold', 'italic', 'underline', 'blockquote', 'strikethrough', 'bullist', 'numlist', 'alignleft', 'aligncenter', 'alignright', 'undo', 'redo', 'link', 'unlink', 'fullscreen'), $editor_id), ); } else { $toolbars['Full'] = array( 1 => apply_filters('mce_buttons', array('bold', 'italic', 'strikethrough', 'bullist', 'numlist', 'blockquote', 'justifyleft', 'justifycenter', 'justifyright', 'link', 'unlink', 'wp_more', 'spellchecker', 'fullscreen', 'wp_adv' ), $editor_id), 2 => apply_filters('mce_buttons_2', array( 'formatselect', 'underline', 'justifyfull', 'forecolor', 'pastetext', 'pasteword', 'removeformat', 'charmap', 'outdent', 'indent', 'undo', 'redo', 'wp_help' ), $editor_id), 3 => apply_filters('mce_buttons_3', array(), $editor_id), 4 => apply_filters('mce_buttons_4', array(), $editor_id), ); $toolbars['Basic'] = array( 1 => apply_filters( 'teeny_mce_buttons', array('bold', 'italic', 'underline', 'blockquote', 'strikethrough', 'bullist', 'numlist', 'justifyleft', 'justifycenter', 'justifyright', 'undo', 'redo', 'link', 'unlink', 'fullscreen'), $editor_id ), ); } $toolbars = apply_filters( 'acf/fields/wysiwyg/toolbars', $toolbars ); return $toolbars; } function input_admin_footer_js() { $json = array(); $toolbars = $this->get_toolbars(); if( empty($toolbars) ) { return; } foreach( $toolbars as $label => $rows ) { $label = sanitize_title( $label ); $label = str_replace('-', '_', $label); $json[ $label ] = array(); if( !empty($rows) ) { foreach( $rows as $i => $row ) { $json[ $label ][ $i ] = implode(',', $row); } } } ?>acf.fields.wysiwyg.toolbars = <?php echo json_encode($json); ?>;
	<?php
 } function render_field( $field ) { acf_enqueue_uploader(); $id = uniqid('acf-editor-'); $default_editor = 'html'; $show_tabs = true; $height = acf_get_user_setting('wysiwyg_height', 300); $height = max( $height, 300 ); if( $field['tabs'] == 'visual' ) { $default_editor = 'tinymce'; $show_tabs = false; } elseif( $field['tabs'] == 'text' ) { $show_tabs = false; } elseif( wp_default_editor() == 'tinymce' ) { $default_editor = 'tinymce'; } $switch_class = ($default_editor === 'html') ? 'html-active' : 'tmce-active'; remove_all_filters( 'acf_the_editor_content' ); if( function_exists('format_for_editor') ) { add_filter( 'acf_the_editor_content', 'format_for_editor', 10, 2 ); } else { $function = ($default_editor === 'html') ? 'wp_htmledit_pre' : 'wp_richedit_pre'; add_filter('acf_the_editor_content', 'wp_richedit_pre', 10, 1); } $field['value'] = apply_filters( 'acf_the_editor_content', $field['value'], $default_editor ); ?>
		<div id="wp-<?php echo $id; ?>-wrap" class="acf-editor-wrap wp-core-ui wp-editor-wrap <?php echo $switch_class; ?>" data-toolbar="<?php echo $field['toolbar']; ?>" data-upload="<?php echo $field['media_upload']; ?>">
			<div id="wp-<?php echo $id; ?>-editor-tools" class="wp-editor-tools hide-if-no-js">
				<?php if( $field['media_upload'] ): ?>
				<div id="wp-<?php echo $id; ?>-media-buttons" class="wp-media-buttons">
					<?php do_action( 'media_buttons', $id ); ?>
				</div>
				<?php endif; ?>
				<?php if( user_can_richedit() && $show_tabs ): ?>
					<div class="wp-editor-tabs">
						<button id="<?php echo $id; ?>-tmce" class="wp-switch-editor switch-tmce" onclick="switchEditors.switchto(this);" type="button"><?php echo __('Visual', 'acf'); ?></button>
						<button id="<?php echo $id; ?>-html" class="wp-switch-editor switch-html" onclick="switchEditors.switchto(this);" type="button"><?php echo _x( 'Text', 'Name for the Text editor tab (formerly HTML)', 'acf' ); ?></button>
					</div>
				<?php endif; ?>
			</div>
			<div id="wp-<?php echo $id; ?>-editor-container" class="wp-editor-container">
				<textarea id="<?php echo $id; ?>" class="wp-editor-area" name="<?php echo $field['name']; ?>" <?php if($height): ?>style="height:<?php echo $height; ?>px;"<?php endif; ?>><?php echo $field['value']; ?></textarea>
			</div>
		</div>
		<?php
 } function render_field_settings( $field ) { $toolbars = $this->get_toolbars(); $choices = array(); if( !empty($toolbars) ) { foreach( $toolbars as $k => $v ) { $label = $k; $name = sanitize_title( $label ); $name = str_replace('-', '_', $name); $choices[ $name ] = $label; } } acf_render_field_setting( $field, array( 'label' => __('Default Value','acf'), 'instructions' => __('Appears when creating a new post','acf'), 'type' => 'textarea', 'name' => 'default_value', )); acf_render_field_setting( $field, array( 'label' => __('Tabs','acf'), 'instructions' => '', 'type' => 'select', 'name' => 'tabs', 'choices' => array( 'all' => __("Visual & Text",'acf'), 'visual' => __("Visual Only",'acf'), 'text' => __("Text Only",'acf'), ) )); acf_render_field_setting( $field, array( 'label' => __('Toolbar','acf'), 'instructions' => '', 'type' => 'select', 'name' => 'toolbar', 'choices' => $choices )); acf_render_field_setting( $field, array( 'label' => __('Show Media Upload Buttons?','acf'), 'instructions' => '', 'type' => 'radio', 'name' => 'media_upload', 'layout' => 'horizontal', 'choices' => array( 1 => __("Yes",'acf'), 0 => __("No",'acf'), ) )); } function format_value( $value, $post_id, $field ) { if( empty($value) ) { return $value; } $value = apply_filters( 'acf_the_content', $value ); $value = str_replace(']]>', ']]&gt;', $value); return $value; } } new acf_field_wysiwyg(); endif; ?>
