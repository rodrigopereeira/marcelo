<?php
 if( ! class_exists('acf_field_true_false') ) : class acf_field_true_false extends acf_field { function __construct() { $this->name = 'true_false'; $this->label = __("True / False",'acf'); $this->category = 'choice'; $this->defaults = array( 'default_value' => 0, 'message' => '', ); parent::__construct(); } function render_field( $field ) { $atts = array( 'type' => 'checkbox', 'id' => "{$field['id']}-1", 'name' => $field['name'], 'value' => '1', ); if( !empty($field['value']) ) { $atts['checked'] = 'checked'; } echo '<ul class="acf-checkbox-list acf-bl ' . acf_esc_attr($field['class']) . '">'; echo '<input type="hidden" name="' . acf_esc_attr($field['name']) . '" value="0" />'; echo '<li><label><input ' . acf_esc_attr($atts) . '/>' . $field['message'] . '</label></li>'; echo '</ul>'; } function render_field_settings( $field ) { acf_render_field_setting( $field, array( 'label' => __('Message','acf'), 'instructions' => __('eg. Show extra content','acf'), 'type' => 'text', 'name' => 'message', )); acf_render_field_setting( $field, array( 'label' => __('Default Value','acf'), 'instructions' => '', 'type' => 'true_false', 'name' => 'default_value', )); } function format_value( $value, $post_id, $field ) { return empty($value) ? false : true; } function validate_value( $valid, $value, $field, $input ){ if( ! $field['required'] ) { return $valid; } if( !$value ) { return false; } return $valid; } } new acf_field_true_false(); endif; ?>
