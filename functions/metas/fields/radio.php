<?php
 if( ! class_exists('acf_field_radio') ) : class acf_field_radio extends acf_field { function __construct() { $this->name = 'radio'; $this->label = __("Radio Button",'acf'); $this->category = 'choice'; $this->defaults = array( 'layout' => 'vertical', 'choices' => array(), 'default_value' => '', 'other_choice' => 0, 'save_other_choice' => 0, ); parent::__construct(); } function render_field( $field ) { $i = 0; $checked = false; $field['class'] .= ' acf-radio-list'; $field['class'] .= ($field['layout'] == 'horizontal') ? ' acf-hl' : ' acf-bl'; $e = '<ul ' . acf_esc_attr(array( 'class' => $field['class'] )) . '>'; if( $field['other_choice'] ) { $input = array( 'type' => 'text', 'name' => $field['name'], 'value' => '', 'disabled' => 'disabled' ); if( !isset($field['choices'][ $field['value'] ]) ) { unset($input['disabled']); $input['value'] = $field['value']; $field['value'] = 'other'; } $field['choices']['other'] = '</label><input type="text" ' . acf_esc_attr($input) . ' /><label>'; } if( !empty($field['choices']) ) { if( !isset($field['choices'][ $field['value'] ]) ) { $field['value'] = key($field['choices']); } foreach( $field['choices'] as $value => $label ) { $i++; $atts = array( 'type' => 'radio', 'id' => $field['id'], 'name' => $field['name'], 'value' => $value, ); if( strval($value) === strval($field['value']) ) { $atts['checked'] = 'checked'; $checked = true; } if( isset($field['disabled']) && acf_in_array($value, $field['disabled']) ) { $atts['disabled'] = 'disabled'; } if( $i > 1 ) { $atts['id'] .= '-' . $value; } $e .= '<li><label><input ' . acf_esc_attr( $atts ) . '/>' . $label . '</label></li>'; } } $e .= '</ul>'; echo $e; } function render_field_settings( $field ) { $field['choices'] = acf_encode_choices($field['choices']); acf_render_field_setting( $field, array( 'label' => __('Choices','acf'), 'instructions' => __('Enter each choice on a new line.','acf') . '<br /><br />' . __('For more control, you may specify both a value and label like this:','acf'). '<br /><br />' . __('red : Red','acf'), 'type' => 'textarea', 'name' => 'choices', )); acf_render_field_setting( $field, array( 'label' => __('Other','acf'), 'instructions' => '', 'type' => 'true_false', 'name' => 'other_choice', 'message' => __("Add 'other' choice to allow for custom values", 'acf') )); acf_render_field_setting( $field, array( 'label' => __('Save Other','acf'), 'instructions' => '', 'type' => 'true_false', 'name' => 'save_other_choice', 'message' => __("Save 'other' values to the field's choices", 'acf') )); acf_render_field_setting( $field, array( 'label' => __('Default Value','acf'), 'instructions' => __('Appears when creating a new post','acf'), 'type' => 'text', 'name' => 'default_value', )); acf_render_field_setting( $field, array( 'label' => __('Layout','acf'), 'instructions' => '', 'type' => 'radio', 'name' => 'layout', 'layout' => 'horizontal', 'choices' => array( 'vertical' => __("Vertical",'acf'), 'horizontal' => __("Horizontal",'acf') ) )); } function update_field( $field ) { $field['choices'] = acf_decode_choices($field['choices']); return $field; } function update_value( $value, $post_id, $field ) { if( $field['save_other_choice'] ) { if( !isset($field['choices'][ $value ]) ) { if( !$field['ID'] ) { $field = acf_get_field( $field['key'], true ); } if( !$field['ID'] ) { return $value; } $field['choices'][ $value ] = $value; acf_update_field( $field ); } } return $value; } function load_value( $value, $post_id, $field ) { if( is_array($value) ) { $value = array_pop($value); } return $value; } } new acf_field_radio(); endif; ?>
