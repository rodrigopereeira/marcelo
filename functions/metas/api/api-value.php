<?php
 function acf_get_value( $post_id, $field, $db_only = false ) { $value = null; $found = false; $cache = wp_cache_get( "load_value/post_id={$post_id}/name={$field['name']}", 'acf', false, $found ); if( $found ) { return $cache; } if( empty($post_id) ) { } elseif( is_numeric($post_id) ) { $v = get_post_meta( $post_id, $field['name'], false ); if( isset($v[0]) ) { $value = $v[0]; } } elseif( strpos($post_id, 'user_') !== false ) { $user_id = str_replace('user_', '', $post_id); $user_id = intval( $user_id ); $v = get_user_meta( $user_id, $field['name'], false ); if( isset($v[0]) ) { $value = $v[0]; } } elseif( strpos($post_id, 'comment_') !== false ) { $comment_id = str_replace('comment_', '', $post_id); $comment_id = intval( $comment_id ); $v = get_comment_meta( $comment_id, $field['name'], false ); if( isset($v[0]) ) { $value = $v[0]; } } else { $v = get_option( "{$post_id}_{$field['name']}", null ); if( ! is_null($v) ) { $value = $v; } } if( $value === null && isset($field['default_value']) ) { $value = $field['default_value']; } $value = maybe_unserialize( $value ); if( $db_only ) { return $value; } $value = apply_filters( "acf/load_value", $value, $post_id, $field ); $value = apply_filters( "acf/load_value/type={$field['type']}", $value, $post_id, $field ); $value = apply_filters( "acf/load_value/name={$field['name']}", $value, $post_id, $field ); $value = apply_filters( "acf/load_value/key={$field['key']}", $value, $post_id, $field ); wp_cache_set( "load_value/post_id={$post_id}/name={$field['name']}", $value, 'acf' ); return $value; } function acf_format_value( $value, $post_id, $field ) { $value = apply_filters( "acf/format_value", $value, $post_id, $field ); $value = apply_filters( "acf/format_value/type={$field['type']}", $value, $post_id, $field ); $value = apply_filters( "acf/format_value/name={$field['name']}", $value, $post_id, $field ); $value = apply_filters( "acf/format_value/key={$field['key']}", $value, $post_id, $field ); return $value; } function acf_update_value( $value = null, $post_id = 0, $field ) { $return = false; if( acf_get_setting('stripslashes') ) { $value = stripslashes_deep($value); } $value = apply_filters( "acf/update_value", $value, $post_id, $field ); $value = apply_filters( "acf/update_value/type={$field['type']}", $value, $post_id, $field ); $value = apply_filters( "acf/update_value/name={$field['name']}", $value, $post_id, $field ); $value = apply_filters( "acf/update_value/key={$field['key']}", $value, $post_id, $field ); if( is_numeric($post_id) ) { $return = update_metadata('post', $post_id, $field['name'], $value ); update_metadata('post', $post_id, '_' . $field['name'], $field['key']); } elseif( strpos($post_id, 'user_') !== false ) { $user_id = str_replace('user_', '', $post_id); $return = update_metadata('user', $user_id, $field['name'], $value); update_metadata('user', $user_id, '_' . $field['name'], $field['key']); } elseif( strpos($post_id, 'comment_') !== false ) { $comment_id = str_replace('comment_', '', $post_id); $return = update_metadata('comment', $comment_id, $field['name'], $value); update_metadata('comment', $comment_id, '_' . $field['name'], $field['key']); } else { $value = stripslashes_deep($value); $return = acf_update_option( $post_id . '_' . $field['name'], $value ); acf_update_option( '_' . $post_id . '_' . $field['name'], $field['key'] ); } wp_cache_delete( "load_value/post_id={$post_id}/name={$field['name']}", 'acf' ); return $return; } function acf_update_option( $option = '', $value = false, $autoload = null ) { $deprecated = ''; $return = false; if( $autoload === null ){ $autoload = acf_get_setting('autoload') ? 'yes' : 'no'; } if( get_option($option) !== false ) { $return = update_option( $option, $value ); } else { $return = add_option( $option, $value, $deprecated, $autoload ); } return $return; } function acf_delete_value( $post_id = 0, $key = '' ) { $field = false; $return = false; if( is_string($key) ) { $field = acf_get_field_reference( $key, $post_id ); $field = acf_get_field( $field ); } elseif( is_array($key) ) { $field = $key; $key = $field['name']; } else { return false; } do_action("acf/delete_value", $post_id, $key, $field); if( $field ) { do_action("acf/delete_value/type={$field['type']}", $post_id, $key, $field); do_action("acf/delete_value/name={$field['_name']}", $post_id, $key, $field); do_action("acf/delete_value/key={$field['key']}", $post_id, $key, $field); } if( is_numeric($post_id) ) { $return = delete_metadata('post', $post_id, $key ); delete_metadata('post', $post_id, '_' . $key ); } elseif( strpos($post_id, 'user_') !== false ) { $user_id = str_replace('user_', '', $post_id); $return = delete_metadata('user', $user_id, $key); delete_metadata('user', $user_id, '_' . $key); } elseif( strpos($post_id, 'comment_') !== false ) { $comment_id = str_replace('comment_', '', $post_id); $return = delete_metadata('comment', $comment_id, $key); delete_metadata('comment', $comment_id, '_' . $key); } else { $return = delete_option( $post_id . '_' . $key ); delete_option( '_' . $post_id . '_' . $key ); } wp_cache_delete( "load_value/post_id={$post_id}/name={$key}", 'acf' ); return $return; } ?>
