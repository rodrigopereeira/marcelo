<?php  class acf_compatibility { function __construct() { add_filter('acf/get_valid_field', array($this, 'get_valid_field'), 20, 1); add_filter('acf/get_valid_field/type=textarea', array($this, 'get_valid_textarea_field'), 20, 1); add_filter('acf/get_valid_field/type=relationship', array($this, 'get_valid_relationship_field'), 20, 1); add_filter('acf/get_valid_field/type=post_object', array($this, 'get_valid_relationship_field'), 20, 1); add_filter('acf/get_valid_field/type=page_link', array($this, 'get_valid_relationship_field'), 20, 1); add_filter('acf/get_valid_field/type=image', array($this, 'get_valid_image_field'), 20, 1); add_filter('acf/get_valid_field/type=file', array($this, 'get_valid_image_field'), 20, 1); add_filter('acf/get_valid_field/type=wysiwyg', array($this, 'get_valid_wysiwyg_field'), 20, 1); add_filter('acf/get_valid_field/type=date_picker', array($this, 'get_valid_date_picker_field'), 20, 1); add_filter('acf/get_valid_field/type=taxonomy', array($this, 'get_valid_taxonomy_field'), 20, 1); add_filter('acf/get_valid_field_group', array($this, 'get_valid_field_group'), 20, 1); add_action('acf/init', array($this, 'init'), 20); } function init() { if( defined('ACF_LITE') && ACF_LITE ) { acf_update_setting('show_admin', false); } } function get_valid_field( $field ) { if( isset($field['conditional_logic']['status']) ) { $logic = acf_extract_var( $field, 'conditional_logic' ); if( !empty($logic['status']) ) { $field['conditional_logic'] = array(); $group = 0; $all_or_any = $logic['allorany']; if( !empty($logic['rules']) ) { foreach( $logic['rules'] as $rule ) { if( $all_or_any == 'any' ) { $group++; } $field['conditional_logic'][ $group ][] = $rule; } } $field['conditional_logic'] = array_values($field['conditional_logic']); } else { $field['conditional_logic'] = 0; } } if( acf_get_compatibility('field_wrapper_class') ) { $field['wrapper']['class'] .= " field_type-{$field['type']}"; if( $field['key'] ) { $field['wrapper']['class'] .= " field_key-{$field['key']}"; } } return $field; } function get_valid_relationship_field( $field ) { $field['post_type'] = acf_get_array($field['post_type']); $field['taxonomy'] = acf_get_array($field['taxonomy']); if( acf_in_array('all', $field['post_type']) ) { $field['post_type'] = array(); } if( acf_in_array('all', $field['taxonomy']) ) { $field['taxonomy'] = array(); } if( !empty($field['result_elements']) ) { $field['elements'] = acf_extract_var( $field, 'result_elements' ); } return $field; } function get_valid_textarea_field( $field ) { $formatting = acf_extract_var( $field, 'formatting' ); if( $formatting === 'br' ) { $field['new_lines'] = 'br'; } return $field; } function get_valid_image_field( $field ) { if( !empty($field['save_format']) ) { $field['return_format'] = acf_extract_var( $field, 'save_format' ); } if( $field['return_format'] == 'object' ) { $field['return_format'] = 'array'; } return $field; } function get_valid_wysiwyg_field( $field ) { if( $field['media_upload'] === 'yes' ) { $field['media_upload'] = 1; } elseif( $field['media_upload'] === 'no' ) { $field['media_upload'] = 0; } return $field; } function get_valid_date_picker_field( $field ) { if( !empty($field['date_format']) ) { $date_format = acf_extract_var( $field, 'date_format' ); $display_format = acf_extract_var( $field, 'display_format' ); $date_format = acf_convert_date_to_php( $date_format ); $display_format = acf_convert_date_to_php( $display_format ); $field['return_format'] = $date_format; $field['display_format'] = $display_format; } return $field; } function get_valid_taxonomy_field( $field ) { if( isset($field['load_save_terms']) ) { $field['save_terms'] = $field['load_save_terms']; } return $field; } function get_valid_field_group( $field_group ) { global $wpdb; $v = 5; if( empty($field_group['key']) ) { $v = 4; $field_group['key'] = empty($field_group['id']) ? uniqid('group_') : 'group_' . $field_group['id']; } if( !empty($field_group['options']) ) { $options = acf_extract_var($field_group, 'options'); $field_group = array_merge($field_group, $options); } if( !empty($field_group['location']['rules']) ) { $location = acf_extract_var( $field_group, 'location' ); $field_group['location'] = array(); $group = 0; $all_or_any = $location['allorany']; if( !empty($location['rules']) ) { foreach( $location['rules'] as $rule ) { if( $all_or_any == 'any' ) { $group++; } $field_group['location'][ $group ][] = $rule; } } $field_group['location'] = array_values($field_group['location']); } if( !empty($field_group['location']) ) { $param_replace = array( 'taxonomy' => 'post_taxonomy', 'ef_media' => 'attachment', 'ef_taxonomy' => 'taxonomy', 'ef_user' => 'user_role', 'user_type' => 'current_user_role' ); if( $v == 5 ) { unset($param_replace['taxonomy']); } foreach( array_keys($field_group['location']) as $i ) { $group = acf_extract_var( $field_group['location'], $i ); if( empty($group) ) { continue; } foreach( array_keys($group) as $j ) { $rule = acf_extract_var( $group, $j ); if( isset($param_replace[ $rule['param'] ]) ) { $rule['param'] = $param_replace[ $rule['param'] ]; } if( $rule['param'] == 'post_category' || $rule['param'] == 'post_taxonomy' ) { if( is_numeric($rule['value']) ) { $term_id = $rule['value']; $taxonomy = $wpdb->get_var( $wpdb->prepare( "SELECT taxonomy FROM $wpdb->term_taxonomy WHERE term_id = %d LIMIT 1", $term_id) ); $term = get_term( $term_id, $taxonomy ); $rule['value'] = "{$term->taxonomy}:{$term->slug}"; } } $group[ $j ] = $rule; } $field_group['location'][ $i ] = $group; } } if( !empty($field_group['layout']) ) { $field_group['style'] = acf_extract_var($field_group, 'layout'); } if( $field_group['style'] === 'no_box' ) { $field_group['style'] = 'seamless'; } return $field_group; } } new acf_compatibility(); ?>
