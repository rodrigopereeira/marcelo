<?php  class acf_local { var $enabled = true, $groups = array(), $fields = array(), $parents = array(); function __construct() { add_filter('acf/get_field_groups', array($this, 'get_field_groups'), 10, 1); add_action('acf/delete_field', array($this, 'delete_field'), 10, 1); } function get_field_groups( $field_groups ) { if( !acf_have_local_field_groups() ) { return $field_groups; } $ignore = array(); $added = false; if( !empty($field_groups) ) { foreach( $field_groups as $k => $group ) { $ignore[] = $group['key']; } } $groups = acf_get_local_field_groups(); foreach( $groups as $group ) { if( in_array($group['key'], $ignore) ) { continue; } $field_groups[] = $group; $added = true; } if( $added ) { $menu_order = array(); $title = array(); foreach( $field_groups as $key => $row ) { $menu_order[ $key ] = $row['menu_order']; $title[ $key ] = $row['title']; } array_multisort( $menu_order, SORT_ASC, $title, SORT_ASC, $field_groups ); } return $field_groups; } function delete_field( $field ) { $this->remove_field( $field['key'] ); } function add_field_group( $field_group ) { $field_group = acf_get_valid_field_group($field_group); if( acf_is_local_field_group($field_group['key']) ) { return; } if( empty($field_group['local']) ) { $field_group['local'] = 'php'; } $fields = acf_extract_var($field_group, 'fields'); $fields = acf_prepare_fields_for_import( $fields ); $this->groups[ $field_group['key'] ] = $field_group; foreach( $fields as $field ) { if( empty($field['parent']) ) { $field['parent'] = $field_group['key']; } $this->add_field( $field ); } } function add_field( $field ) { $field = acf_get_valid_field( $field ); $this->add_parent_reference( $field['parent'], $field['key'] ); $field['menu_order'] = count( $this->parents[ $field['parent'] ] ) - 1; $this->fields[ $field['key'] ] = $field; wp_cache_delete( "get_field/key={$field['key']}", 'acf' ); wp_cache_delete( "get_fields/parent={$field['parent']}", 'acf' ); } function remove_field( $key ) { $field = acf_get_field( $key ); $this->remove_parent_reference( $field['parent'], $field['key'] ); unset( $this->fields[ $key ] ); if( acf_have_local_fields( $key) ) { acf_remove_local_fields( $key ); } } function add_parent_reference( $parent_key, $field_key ) { if( !isset($this->parents[ $parent_key ]) ) { $this->parents[ $parent_key ] = array(); } elseif( in_array($field_key, $this->parents[ $parent_key ]) ) { return false; } $this->parents[ $parent_key ][] = $field_key; return true; } function remove_parent_reference( $parent_key, $field_key ) { if( !isset($this->parents[ $parent_key ]) ) { return false; } $this->parents[ $parent_key ] = array_diff($this->parents[ $parent_key ], array($field_key)); return true; } } function acf_local() { global $acf_local; if( !isset($acf_local) ) { $acf_local = new acf_local(); } return $acf_local; } function acf_disable_local() { acf_local()->enabled = false; } function acf_enable_local() { acf_local()->enabled = true; } function acf_is_local_enabled() { if( !acf_get_setting('local') ) { return false; } if( !acf_local()->enabled ) { return false; } return true; } function acf_count_local_field_groups( $type = '' ) { $count = 0; if( !empty(acf_local()->groups) ) { foreach( acf_local()->groups as $group ) { if( $type && $group['local'] != $type ) { continue; } $count++; } } return $count; } function acf_have_local_field_groups() { if( !acf_is_local_enabled() ) { return false; } if( !empty(acf_local()->groups) ) { return true; } return false; } function acf_get_local_field_groups() { if( !acf_have_local_field_groups() ) { return false; } $groups = array(); foreach( acf_local()->groups as $group ) { $groups[] = $group; } return $groups; } function acf_add_local_field_group( $field_group ) { acf_local()->add_field_group( $field_group ); } function acf_is_local_field_group( $key ) { if( !acf_is_local_enabled() ) { return false; } if( isset( acf_local()->groups[ $key ] ) ) { return true; } return false; } function acf_get_local_field_group( $key ) { if( !acf_is_local_field_group($key) ) { return false; } return acf_local()->groups[ $key ]; } function acf_add_local_field( $field ) { acf_local()->add_field( $field ); } function acf_remove_local_field( $key ) { acf_local()->remove_field( $key ); } function acf_is_local_field( $key ) { if( !acf_is_local_enabled() ) { return false; } if( isset( acf_local()->fields[ $key ] ) ) { return true; } return false; } function acf_get_local_field( $key ) { if( !acf_is_local_field($key) ) { return false; } return acf_local()->fields[ $key ]; } function acf_count_local_fields( $key ) { if( !empty(acf_local()->parents[ $key ]) ) { return count( acf_local()->parents[ $key ] ); } return 0; } function acf_have_local_fields( $key ) { if( !acf_is_local_enabled() ) { return false; } if( isset( acf_local()->parents[ $key ] ) ) { return true; } return false; } function acf_get_local_fields( $parent ) { if( !acf_have_local_fields($parent) ) { return false; } $fields = array(); foreach( acf_local()->parents[ $parent ] as $key ) { $fields[] = acf_get_field( $key ); } return $fields; } function acf_remove_local_fields( $parent ) { if( empty( acf_local()->parents[ $parent ] ) ) { return false; } foreach( acf_local()->parents[ $parent ] as $key ) { acf_remove_local_field( $key ); } return true; } ?>
