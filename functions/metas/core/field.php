<?php
 class acf_field { var $name, $title, $category, $defaults, $l10n; function __construct() { add_filter("acf/get_field_types", array($this, 'get_field_types'), 10, 1); add_filter("acf/get_valid_field/type={$this->name}", array($this, 'get_valid_field'), 10, 1); $this->add_filter("acf/load_value/type={$this->name}", array($this, 'load_value'), 10, 3); $this->add_filter("acf/update_value/type={$this->name}", array($this, 'update_value'), 10, 3); $this->add_filter("acf/format_value/type={$this->name}", array($this, 'format_value'), 10, 3); $this->add_filter("acf/validate_value/type={$this->name}", array($this, 'validate_value'), 10, 4); $this->add_action("acf/delete_value/type={$this->name}", array($this, 'delete_value'), 10, 3); $this->add_filter("acf/load_field/type={$this->name}", array($this, 'load_field'), 10, 1); $this->add_filter("acf/update_field/type={$this->name}", array($this, 'update_field'), 10, 1); $this->add_filter("acf/duplicate_field/type={$this->name}", array($this, 'duplicate_field'), 10, 1); $this->add_action("acf/delete_field/type={$this->name}", array($this, 'delete_field'), 10, 1); $this->add_action("acf/render_field/type={$this->name}", array($this, 'render_field'), 10, 1); $this->add_action("acf/render_field_settings/type={$this->name}", array($this, 'render_field_settings'), 10, 1); $this->add_action("acf/prepare_field/type={$this->name}", array($this, 'prepare_field'), 10, 1); $this->add_action("acf/input/admin_enqueue_scripts", array($this, 'input_admin_enqueue_scripts'), 10, 0); $this->add_action("acf/input/admin_head", array($this, 'input_admin_head'), 10, 0); $this->add_action("acf/input/form_data", array($this, 'input_form_data'), 10, 1); $this->add_filter("acf/input/admin_l10n", array($this, 'input_admin_l10n'), 10, 1); $this->add_action("acf/input/admin_footer", array($this, 'input_admin_footer'), 10, 1); $this->add_action("acf/field_group/admin_enqueue_scripts", array($this, 'field_group_admin_enqueue_scripts'), 10, 0); $this->add_action("acf/field_group/admin_head", array($this, 'field_group_admin_head'), 10, 0); } function add_filter($tag, $function_to_add, $priority = 10, $accepted_args = 1) { if( is_callable($function_to_add) ) { add_filter($tag, $function_to_add, $priority, $accepted_args); } } function add_action($tag, $function_to_add, $priority = 10, $accepted_args = 1) { if( is_callable($function_to_add) ) { add_action($tag, $function_to_add, $priority, $accepted_args); } } function get_field_types( $fields ) { $l10n = array( 'basic' => __('Basic', 'acf'), 'content' => __('Content', 'acf'), 'choice' => __('Choice', 'acf'), 'relational' => __('Relational', 'acf'), 'jquery' => __('jQuery', 'acf'), 'layout' => __('Layout', 'acf'), ); if( !$this->category ) { $this->category = 'basic'; } if( isset($l10n[ $this->category ]) ) { $cat = $l10n[ $this->category ]; } else { $cat = $this->category; } $fields[ $cat ][ $this->name ] = $this->label; return $fields; } function get_valid_field( $field ) { if( !empty($this->defaults) ) { foreach( $this->defaults as $k => $v ) { if( !isset($field[ $k ]) ) { $field[ $k ] = $v; } } } return $field; } function input_admin_l10n( $l10n ) { if( !empty($this->l10n) ) { $l10n[ $this->name ] = $this->l10n; } return $l10n; } } ?>
