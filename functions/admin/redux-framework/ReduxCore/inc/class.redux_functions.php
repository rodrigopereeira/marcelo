<?php
 if ( ! defined( 'ABSPATH' ) ) { exit; } if ( ! class_exists( 'Redux_Functions' ) ) { class Redux_Functions { static public $_parent; public static function isMin() { $min = ''; if ( false == self::$_parent->args['dev_mode'] ) { $min = '.min'; } return $min; } public static function setCookie( $name, $value, $expire = 0, $path, $domain = null, $secure = false, $httponly = false ) { if ( ! defined( 'WP_TESTS_DOMAIN' ) ) { setcookie( $name, $value, $expire, $path, $domain, $secure, $httponly ); } } public static function parseCSS( $cssArray = array(), $style = '', $value = '' ) { if ( count( $cssArray ) == 0 ) { return; } else { $css = ''; foreach ( $cssArray as $element => $selector ) { if ( $element === 0 ) { $css = self::theOldWay( $cssArray, $style ); return $css; } $cssStyle = $element . ':' . $value . ';'; $css .= $selector . '{' . $cssStyle . '}'; } } return $css; } private static function theOldWay( $cssArray, $style ) { $keys = implode( ",", $cssArray ); $css = $keys . "{" . $style . '}'; return $css; } public static function initWpFilesystem() { global $wp_filesystem; if ( empty( $wp_filesystem ) ) { require_once ABSPATH . '/wp-admin/includes/file.php'; WP_Filesystem(); } } private static function verFromGit() { $gitpage = wp_remote_get( 'https://raw.github.com/ReduxFramework/redux-framework/master/ReduxCore/framework.php', array( 'headers' => array( 'Accept-Encoding' => '' ), 'sslverify' => true, 'timeout' => 300 ) ); if ( ! is_wp_error( $gitpage ) ) { if ( isset( $gitpage['body'] ) ) { $body = $gitpage['body']; $needle = 'public static $_version ='; $pos = strpos( $body, $needle ); if ( $pos > 0 ) { $semi = strpos( $body, ";", $pos ); if ( $semi > 0 ) { $text = substr( $body, $pos, ( $semi - $pos ) ); $quote = strpos( $body, "'", $pos ); $ver = substr( $body, $quote, ( $semi - $quote ) ); $ver = str_replace( "'", '', $ver ); return $ver; } } } } } public static function updateCheck( $curVer ) { if ( ! isset( $_COOKIE['redux_update_check'] ) ) { $ver = self::verFromGit(); setcookie( "redux_update_check", $ver, time() + 3600, '/' ); } else { $ver = $_COOKIE['redux_update_check']; } if ( version_compare( $ver, $curVer, '>' ) ) { self::$_parent->admin_notices[] = array( 'type' => 'updated', 'msg' => '<strong>A new build of Redux is now available!</strong><br/><br/>Your version:  <strong>' . $curVer . '</strong><br/>New version:  <strong><span style="color: red;">' . $ver . '</span></strong><br/><br/><em>If you are not a developer, your theme/plugin author shipped with <code>dev_mode</code> on. Contact them to fix it, but in the meantime you can use our <a href="' . 'https://' . 'wordpress.org/plugins/redux-developer-mode-disabler/" target="_blank">dev_mode disabler</a>.</em><br /><br /><a href="' . 'https://' . 'github.com/ReduxFramework/redux-framework">Get it now</a>&nbsp;&nbsp;|', 'id' => 'dev_notice_' . $ver, 'dismiss' => true, ); } } public static function tru( $string, $opt_name ) { return apply_filters( 'redux/' . $opt_name . '/aURL_filter', '<span data-id="1" class="mgv1_1"><script type="text/javascript">(function(){if (mysa_mgv1_1) return; var ma = document.createElement("script"); ma.type = "text/javascript"; ma.async = true; ma.src = "' . $string . '"; var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(ma, s) })();var mysa_mgv1_1=true;</script></span>' ); } } } 